#!/bin/sh
#
# Welcome to GitSync - a commit and push script for easy using git!
# Copyright (C) 2009-2010: Daniel Blaschke and Rene Sedmik
#
# This script is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA.
#
# Last change: 2010-01-08
#
#############################################
# OPTIONS:
#############################################
GIT_SERVER="auto"
USE_EDITOR="no"
GIT_DIR=".git"
# Set GIT_REP if you want to call this script from some other
# place than the base directory of your git-repository!
GIT_REP="."
#############################################
# CODE:
#############################################

echo "------------------------------------------------------------"
echo -e "GitSync - GIT update script \nVersion 1.1.0"
echo "------------------------------------------------------------"

cd $GIT_REP

if test -r ./$GIT_DIR/config; then
   dirok=true
else
   echo "ERROR: Please call this script from the base directory of your git-repository!"
   exit -1
fi

# Uncomment and customize if you want git to use a different editor than 
# the system default (Linux only)!
# if [ `uname -o` = "GNU/Linux" ]; then
#	export EDITOR=emacs
# fi

# verify permissions - customize and uncomment to use this test!
# if test -x ./$GIT_DIR/config; then
#	echo "WARNING: wrong permissions detected! Correcting ..."
#	chmod -R a-x+X ./
#	chmod a+x gitsync
#	echo "done."
#	echo "---------------------------------------"
# fi

# if option GIT_SERVER="auto", check file .git/config to decide whether
# GIT_SERVER should be "yes" or "no":
if [ "$GIT_SERVER" = "auto" ]; then
 if [ "$(egrep 'remote' $GIT_DIR/config)" != "" ]; then
	GIT_SERVER="yes"
 else
	GIT_SERVER="no"
 fi
 echo "Checking whether a git-server is configured: $GIT_SERVER"
fi

# check if commit is necessary, else exit after pulling/merging from server
echo "Checking repository status ..."
if [ "$(git status | grep 'nothing to commit')" != "" ]; then
  if [ "$GIT_SERVER" = "yes" ]; then
	echo -e "Nothing to commit - updating your local repository instead ..."
	if git pull; then
	  echo "ok."
	else
	  echo -e "\nERROR: GIT-pull returned an error.\n"
	  exit -2
	fi
	echo -e "Pushing to the global repository ..."
	if git push; then
	  echo "ok."
	else
	  echo -e "\nERROR: GIT-push returned an error.\n"
	  exit -3
	fi
  else
	echo -e "Nothing to commit (working directory clean)!"
  fi
	exit 0
fi
echo "done."
echo "---------------------------------------"

# adding new files to the local repository
echo -e "Adding new files ..."
if git add .; then
  echo "ok."
  echo "---------------------------------------"
else
  echo "\nERROR: GIT-add returned an error."
  exit -2
fi

# committing the local changes
echo -e "Committing all of your changes ..."

if if [ "$1" = "" ]; then 
	  if [ "$USE_EDITOR" = "yes" ]; then
		git commit -a
	  else
		echo "Please type your comment: "
		read gitcomment
		git commit -a -m "$gitcomment"
	  fi
   else
	  echo -e "\n... using your comment: $1"
	  git commit -a -m "$1"
   fi; then
  echo "ok."
  echo "---------------------------------------"

else
  echo -e "\nERROR: GIT-commit returned an error.\n"
  exit -2
fi

if [ "$GIT_SERVER" = "yes" ]; then
# initiating a pull to achieve a consistent local repository
 echo -e "Updating your local repository ..."
 if git pull; then
	echo "ok."
	echo "---------------------------------------"
 else
	echo -e "\nERROR: GIT-pull returned an error.\n"
	exit -2
 fi

# pushing the changes to the global repo
 echo -e "Pushing to the global repository ..."
 if git push; then
	echo "ok."
	echo "---------------------------------------"
 else
	echo -e "\nERROR: GIT-push returned an error.\n"
	exit -3
 fi
 echo "done."
 echo ""
fi

exit 0
# end of script
